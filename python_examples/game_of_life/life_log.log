DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:low_point = Point(20.0, 10.0) high_point = Point(30.0, 20.0)
DEBUG:root:matrix_x = 2 matrix_y= 1
DEBUG:root:low_point = Point(30.0, 10.0) high_point = Point(40.0, 20.0)
DEBUG:root:matrix_x = 3 matrix_y= 1
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:low_point = Point(20.0, 10.0) high_point = Point(30.0, 20.0)
DEBUG:root:matrix_x = 2 matrix_y= 1
DEBUG:root:low_point = Point(30.0, 10.0) high_point = Point(40.0, 20.0)
DEBUG:root:matrix_x = 3 matrix_y= 1
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:low_point = Point(10.0, 20.0) high_point = Point(20.0, 30.0)
DEBUG:root:matrix_x = 1 matrix_y= 2
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:low_point = Point(10.0, 0.0) high_point = Point(20.0, 10.0)
DEBUG:root:matrix_x = 1 matrix_y= 0
DEBUG:root:low_point = Point(20.0, 0.0) high_point = Point(30.0, 10.0)
DEBUG:root:matrix_x = 2 matrix_y= 0
DEBUG:root:low_point = Point(20.0, 10.0) high_point = Point(30.0, 20.0)
DEBUG:root:matrix_x = 2 matrix_y= 1
DEBUG:root:low_point = Point(20.0, 20.0) high_point = Point(30.0, 30.0)
DEBUG:root:matrix_x = 2 matrix_y= 2
DEBUG:root:low_point = Point(30.0, 10.0) high_point = Point(40.0, 20.0)
DEBUG:root:matrix_x = 3 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:low_point = Point(10.0, 20.0) high_point = Point(20.0, 30.0)
DEBUG:root:matrix_x = 1 matrix_y= 2
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:low_point = Point(10.0, 0.0) high_point = Point(20.0, 10.0)
DEBUG:root:matrix_x = 1 matrix_y= 0
DEBUG:root:low_point = Point(30.0, 10.0) high_point = Point(40.0, 20.0)
DEBUG:root:matrix_x = 3 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:low_point = Point(20.0, 0.0) high_point = Point(30.0, 10.0)
DEBUG:root:matrix_x = 2 matrix_y= 0
DEBUG:root:low_point = Point(30.0, 10.0) high_point = Point(40.0, 20.0)
DEBUG:root:matrix_x = 3 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:status_grid = [[0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 1, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(20.0, 10.0) high_point = Point(30.0, 20.0)
DEBUG:root:matrix_x = 2 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(20.0, 0.0) high_point = Point(30.0, 10.0)
DEBUG:root:matrix_x = 2 matrix_y= 0
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 1, 0, 0], [1, 1, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 1, 0, 0], [0, 1, 0, 0], [1, 1, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 20.0) high_point = Point(10.0, 30.0)
DEBUG:root:matrix_x = 0 matrix_y= 2
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(20.0, 20.0) high_point = Point(30.0, 30.0)
DEBUG:root:matrix_x = 2 matrix_y= 2
DEBUG:root:status_grid = [[0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(10.0, 20.0) high_point = Point(20.0, 30.0)
DEBUG:root:matrix_x = 1 matrix_y= 2
DEBUG:root:status_grid = [[0, 0, 1, 0], [0, 0, 0, 0], [0, 0, 1, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 1, 0], [0, 1, 1, 0], [0, 0, 1, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 1, 0], [0, 1, 1, 0], [0, 0, 1, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 10.0) high_point = Point(10.0, 20.0)
DEBUG:root:matrix_x = 0 matrix_y= 1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(10.0, 10.0) high_point = Point(20.0, 20.0)
DEBUG:root:matrix_x = 1 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(20.0, 10.0) high_point = Point(30.0, 20.0)
DEBUG:root:matrix_x = 2 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(30.0, 10.0) high_point = Point(40.0, 20.0)
DEBUG:root:matrix_x = 3 matrix_y= 1
DEBUG:root:status_grid = [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, -10.0) high_point = Point(10.0, 0.0)
DEBUG:root:matrix_x = 0 matrix_y= -1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (3, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, -10.0) high_point = Point(10.0, 0.0)
DEBUG:root:matrix_x = 0 matrix_y= -1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 1
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, -10.0) high_point = Point(10.0, 0.0)
DEBUG:root:matrix_x = 0 matrix_y= -1
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 1
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][4]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (3, 3)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 2)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 2)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (4, 2)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (1, 2)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (0, 2)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (2, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:left : (x, y) = (0, 0)
DEBUG:root:left : (i, j) = (4, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (2, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (2, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (2, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:left : (x, y) = (0, 0)
DEBUG:root:left : (i, j) = (0, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 10
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (2, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (2, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (2, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:left : (x, y) = (0, 0)
DEBUG:root:left : (i, j) = (0, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 10
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:low_point = Point(0.0, 0.0) high_point = Point(10.0, 10.0)
DEBUG:root:matrix_x = 0 matrix_y= 0
DEBUG:root:status_grid = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:next_grid   = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_left : (x, y) = (0, 0)
DEBUG:root:upper_left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:above : (x, y) = (0, 0)
DEBUG:root:above : (i, j) = (1, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_right : (x, y) = (0, 0)
DEBUG:root:upper_right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:right : (x, y) = (0, 0)
DEBUG:root:right : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower_right : (x, y) = (0, 0)
DEBUG:root:lower_right : (i, j) = (2, 1)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower : (x, y) = (0, 0)
DEBUG:root:lower : (i, j) = (2, 0)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower left : (x, y) = (0, 0)
DEBUG:root:lower left : (i, j) = (2, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:left : (x, y) = (0, 0)
DEBUG:root:left : (i, j) = (0, 4)
DEBUG:root:(i,j) = (0,0) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:-------------------- check neighbor loop ---------
DEBUG:root:if matrix loop x = 0 y = 10
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_left : (x, y) = (0, 10)
DEBUG:root:upper_left : (i, j) = (2, 4)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:above : (x, y) = (0, 10)
DEBUG:root:above : (i, j) = (2, 0)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:upper_right : (x, y) = (0, 10)
DEBUG:root:upper_right : (i, j) = (2, 1)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:right : (x, y) = (0, 10)
DEBUG:root:right : (i, j) = (1, 1)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower_right : (x, y) = (0, 10)
DEBUG:root:lower_right : (i, j) = (0, 1)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower : (x, y) = (0, 10)
DEBUG:root:lower : (i, j) = (0, 0)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 1
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:lower left : (x, y) = (0, 10)
DEBUG:root:lower left : (i, j) = (0, 4)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
DEBUG:root:status_grid [rows][columns] = [3][5]
DEBUG:root:left : (x, y) = (0, 10)
DEBUG:root:left : (i, j) = (1, 4)
DEBUG:root:(i,j) = (0,10) [[1, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
DEBUG:root:cell value = 0
